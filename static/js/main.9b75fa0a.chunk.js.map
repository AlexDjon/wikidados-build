{"version":3,"sources":["assets/default-user.png","services/api.js","services/getFirstData.js","validation/yup.js","pages/Home/components/Form/index.jsx","pages/Home/components/Item/index.jsx","pages/Home/components/List/index.jsx","pages/Home/index.js","App.js","index.js"],"names":["module","exports","axios","create","baseURL","getFirstData","a","api","get","getTotal","totalUsers","data","total","prepareUrl","getAll","allUsers","i","users","yup","shape","email","required","first_name","min","max","last_name","avatar","url","useState","firstName","setFirstName","lastName","setLastName","setEmail","setAvatar","onSubmit","e","preventDefault","validation","validate","then","Swal","fire","text","icon","catch","errors","join","handleSubmit","className","type","placeholder","onChange","target","value","user","remove","edit","index","require","title","html","focusConfirm","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","preConfirm","id","document","getElementById","src","alt","href","onClick","result","toRemove","toEdit","list","page","setPage","limit","setLimit","count","search","usersList","setUsersList","changePage","method","changeLimit","useEffect","newList","map","Item","key","Home","actualPage","setActualPage","totalPages","setTotalPages","usersData","setUsersData","usersView","setUsersView","setTotalUsers","lastId","setLastId","user_id","newUser","alert","filter","v","atualData","atualIndex","val","toFilter","place","regex","RegExp","split","length","filteredUsersByName","filteredUsersByLastName","toFixed","initialLoad","initial","end","newView","slice","newTotalPages","Math","ceil","isFinite","changePagination","changeView","Form","List","App","ReactDOM","render","StrictMode"],"mappings":"kMAAAA,EAAOC,QAAU,IAA0B,0C,iMCE5BC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BCDI,SAAeC,IAA9B,+B,4CAAe,sCAAAC,EAAA,sEAIUC,EAAIC,IAAI,UAJlB,cAIPC,EAJO,OAKPC,EAAaD,EAASE,KAAKC,MAE3BC,EAPO,0BAOyBH,GAPzB,SASQH,EAAIC,IAAIK,GAThB,OAeb,IANMC,EATO,OAcTC,EAAW,GACPC,EAAIN,EAAW,EAAGM,GAAK,EAAGA,IAChCD,EAAQ,sBAAOA,GAAP,CAAiBD,EAAOH,KAAKA,KAAKK,KAhB/B,yBAmBN,CACLN,aACAO,MAAOF,IArBI,6C,kDCCA,GACbZ,OAAQe,MAAaC,MACrB,CACEC,MAAOF,MAEJE,MAAM,8BACNC,SAAS,qCACZC,WAAYJ,MAETK,IAAI,EAAG,mDACPC,IAAI,GAAI,iDACRH,SAAS,mCACZI,UAAWP,MAERK,IAAI,EAAG,wDACPC,IAAI,GAAI,yDACRH,SAAS,wCACZK,OAAQR,MAELS,IAAI,kCACJH,IAAI,IAAK,oECfD,G,MAAA,YAAiB,IAAdrB,EAAa,EAAbA,OAAa,EACOyB,mBAAS,IADhB,mBACrBC,EADqB,KACVC,EADU,OAEKF,mBAAS,IAFd,mBAErBG,EAFqB,KAEXC,EAFW,OAGDJ,mBAAS,IAHR,mBAGrBR,EAHqB,KAGda,EAHc,OAICL,mBAAS,IAJV,mBAIrBF,EAJqB,KAIbQ,EAJa,KAkC7B,OACE,0BAAMC,SAAU,SAAAC,GAAC,OA7BnB,SAAsBA,GACpBA,EAAEC,iBAEF,IAAM1B,EAAO,CACXS,QACAE,WAAYO,EACZJ,UAAWM,EACXL,UAGFY,EAAWnC,OACRoC,SAAS5B,GACT6B,MAAK,WACJrC,EAAOQ,GAEP8B,IAAKC,KAAK,CACRC,KAAM,yBACNC,KAAM,eAGTC,OAAM,YAAiB,IAAdC,EAAa,EAAbA,OACRL,IAAKC,KAAK,CACRC,KAAMG,EAAOC,KAAK,MAClBH,KAAM,aAMSI,CAAaZ,IAAIa,UAAU,iBAC9C,4BACE,iCADF,kBAIA,2BACEC,KAAK,OACLC,YAAY,QACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBvB,EAAauB,EAAOC,UAEhD,2BACEJ,KAAK,OACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBrB,EAAYqB,EAAOC,UAE/C,2BACEJ,KAAK,QACLC,YAAY,SACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAASoB,EAAOC,UAE5C,2BACEJ,KAAK,OACLC,YAAY,4BACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBnB,EAAUmB,EAAOC,UAG7C,4BAAQJ,KAAK,UACX,uBAAGD,UAAU,kBAAb,OADF,gBC9DS,G,MAAA,YAAoC,IAAjCM,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAE9BhC,EAAyB,KAAhB6B,EAAK7B,OAClBiC,EAAQ,IAAyCJ,EAAK7B,OAHR,4CA6BhD,WAAsBgC,GAAtB,iBAAApD,EAAA,sEACgCmC,IAAKC,KAAK,CACtCkB,MAAO,SACPC,KACE,8DAAuDN,EAAKjC,WAA5D,4FAC2DiC,EAAK9B,UADhE,qFAEoD8B,EAAKnC,MAFzD,wGAGuEmC,EAAK7B,OAH5E,0BAIFoC,cAAc,EACdC,kBAAkB,EAClBC,kBAAmB,UACnBC,iBAAkB,YAClBC,gBAAgB,EAChBC,WAAY,WACV,MAAO,CACLC,GAAIb,EAAKa,GACThD,MAAOiD,SAASC,eAAe,WAAWhB,MAC1ChC,WAAY+C,SAASC,eAAe,gBAAgBhB,MACpD7B,UAAW4C,SAASC,eAAe,eAAehB,MAClD5B,OAAQ2C,SAASC,eAAe,YAAYhB,UAnBpD,iBACiB3C,EADjB,EACU2C,QAwBNhB,EAAWnC,OACVoC,SAAS5B,GACT6B,MAAK,WAEJiB,EAAKC,EAAO/C,GAEZ8B,IAAKC,KAAK,CACRC,KAAM,sBACNC,KAAM,eAGTC,OAAM,YAAiB,IAAdC,EAAa,EAAbA,OACRL,IAAKC,KAAK,CACRC,KAAMG,EAAOC,KAAK,MAClBH,KAAM,aAvCd,4CA7BgD,sBA0EhD,OACE,6BAASK,UAAU,eACjB,yBAAKsB,IAAK7C,EAAQ8C,IAAKjB,EAAKjC,WAAW,YAEvC,yBAAK2B,UAAU,QACb,4BACGM,EAAKjC,WADR,IACqBiC,EAAK9B,WAE1B,uBAAGgD,KAAM,UAAUlB,EAAKnC,OAAQmC,EAAKnC,OACrC,mCACOmC,EAAKa,KAId,yBAAKnB,UAAU,kBACb,4BAAQyB,QAAS,kBAnFvB,SAAkBhB,GAChBjB,IAAKC,KAAK,CACRC,KAAM,wBACNC,KAAM,UACNmB,kBAAkB,EAClBC,kBAAmB,OACnBC,iBAAkB,UAClBC,gBAAgB,IAEjB1B,MAAK,SAACmC,GACDA,EAAOrB,QAETE,EAAOE,GAEPjB,IAAKC,KAAK,CACRC,KAAM,6BACNC,KAAM,gBAmEegC,CAASlB,KAC9B,uBAAGT,UAAU,kBAAb,aAEF,4BAAQyB,QAAS,kBA5FyB,2CA4FnBG,CAAOnB,EAAOH,KACnC,uBAAGN,UAAU,kBAAb,eC9FK,G,MAAA,YAAmF,IAAhF6B,EAA+E,EAA/EA,KAAMC,EAAyE,EAAzEA,KAAMC,EAAmE,EAAnEA,QAASpE,EAA0D,EAA1DA,MAAOqE,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,MAAO3B,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,KAAM2B,EAAa,EAAbA,OAAa,EAK3DxD,mBAAS,IALkD,mBAKvFyD,EALuF,KAK5EC,EAL4E,KAQ/F,SAASC,EAAWC,GACJ,SAAXA,EACgBR,EAAdD,EAAOnE,EAAemE,EAAK,EACjB,GAEI,SAAXS,GACOR,EAAVD,EAAO,EAAWA,EAAK,EACbnE,GAKjB,SAAS6E,EAAYD,GACL,SAAXA,EAECN,EADCD,IAAUE,EACF,EAGAF,EAAM,GAGA,SAAXO,GAEJN,EADW,IAAVD,EACQE,EAGAF,EAAM,GAkBrB,OATAS,qBAAU,WACR,IAAMC,EAAUb,EAAKc,KAAI,SAACrC,EAAMvC,GAE9B,OAAO,kBAAC6E,EAAD,CAAMtC,KAAMA,EAAMG,MAAO1C,EAAGwC,OAAQA,EAAQC,KAAMA,EAAMqC,IAAK9E,OAGtEsE,EAAaK,KACZ,CAAClC,EAAMqB,EAAMtB,EAAQ4B,IAGtB,6BAASnC,UAAU,QACjB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,eACb,4BACEyB,QAAS,kBAAMa,EAAW,SAC1BtC,UAAU,UACV,uBAAGA,UAAU,kBAAb,oBAGF,+BACE,uBAAGA,UAAU,kBAAb,aADF,IAC2C,2BAAI8B,GAD/C,OAC4D,2BAAInE,IAGhE,4BACE8D,QAAS,kBAAMa,EAAW,SAC1BtC,UAAU,UACV,uBAAGA,UAAU,kBAAb,mBAIJ,yBAAKA,UAAU,iBACb,2BACEC,KAAK,OACLC,YAAY,aACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB+B,EAAO/B,EAAOC,WAG5C,yBAAKL,UAAU,gBACb,4BACEyB,QAAS,kBAAMe,EAAY,SAC3BxC,UAAU,UACV,uBAAGA,UAAU,kBAAb,WAGF,+BACE,2BAAIgC,IAGN,4BACEP,QAAS,kBAAMe,EAAY,SAC3BxC,UAAU,UACV,uBAAGA,UAAU,kBAAb,UAMLoC,K,MCjGQ,SAASU,IAAO,MAOSnE,mBAAS,GAPlB,mBAOrBoE,EAPqB,KAOTC,EAPS,OAQDrE,mBAAS,GARR,mBAQrBqD,EARqB,KAQdC,EARc,OASStD,mBAAS,GATlB,mBASrBsE,EATqB,KASTC,EATS,OAoBOvE,mBAAS,IApBhB,mBAoBrBwE,EApBqB,KAoBVC,EApBU,OAqBOzE,mBAAS,IArBhB,mBAqBrB0E,EArBqB,KAqBVC,EArBU,OAsBS3E,mBAAS,GAtBlB,mBAsBrBlB,EAtBqB,KAsBT8F,EAtBS,OAuBC5E,mBAAS,GAvBV,mBAuBrB6E,EAvBqB,KAuBbC,EAvBa,iDA6F7B,WAA4B/F,GAA5B,iBAAAL,EAAA,sEAMIoG,EADMC,EAAUF,EAAO,GAGjBG,EARV,aAQqBxC,GAAIuC,GAAYhG,GARrC,SASU0F,EAAa,CAACO,GAAF,mBAAcR,KATpC,uBAWUI,EAAc9F,EAAW,GAXnC,yDAcImG,MAAM,oDAdV,2DA7F6B,kEAoH7B,WAA4BnD,GAA5B,SAAApD,EAAA,sEACQ+F,EAAaD,EAAUU,QAAO,SAACC,EAAG/F,GAAJ,OAAUA,IAAM0C,MADtD,OAEE8C,EAAc9F,EAAW,GAF3B,4CApH6B,kEA8H7B,WAA0BgD,EAAO/C,GAAjC,SAAAL,EAAA,sEACQ+F,EAAaD,EAAUR,KAAI,SAACoB,EAAWC,GAC3C,OAAGvD,IAAUuD,EACJtG,EAGAqG,MANb,4CA9H6B,kEA8I7B,WAA4BE,GAA5B,mBAAA5G,EAAA,6DACQ6G,EAAW,SAAC5D,EAAM6D,GACtB,IAAMC,EAAQ,IAAIC,OAAOJ,EAAK,MAG9B,OAFgB3D,EAAK6D,GAAQG,MAAMF,GAEzBG,OAAS,GALvB,SAWoCpB,EAAUU,QAAO,SAAAvD,GAAI,OAAI4D,EAAS5D,EAAM,iBAX5E,cAWQkE,EAXR,gBAYwCrB,EAAUU,QAAO,SAAAvD,GAAI,OAAI4D,EAAS5D,EAAM,gBAZhF,cAYQmE,EAZR,gBAcQxC,EAASxE,GAdjB,wBAgBQ6F,EAAa,GAAD,mBAAKkB,GAAL,YAA6BC,KAhBjD,6CA9I6B,sBAiK7B,OAnIAhC,qBAAU,WAAM,4CACd,gCAAApF,EAAA,+EAEwCD,IAFxC,gBAEYK,EAFZ,EAEYA,WAAYO,EAFxB,EAEwBA,MACpBuF,EAAc9F,GACdgG,EAAUhG,GACV2F,EAAapF,GAEU,EACvBkF,GAAezF,EADQ,GACqBiH,WAC5CzC,EAFuB,GAP3B,kDAYI2B,MAAM,qDAZV,2DADc,uBAAC,WAAD,wBAgBde,KAEC,IAOHlC,qBAAU,WAAM,4CAsBd,gCAAApF,EAAA,6DAEQuH,EAAW5C,GAASe,EAAW,GAC/B8B,EAAO7C,EAAQe,EAEf+B,EAAU3B,EAAU4B,MAAMH,EAASC,GAL3C,SAOQvB,EAAawB,GAPrB,4CAtBc,uBAId,WACE,IAAME,EAAgBC,KAAKC,KAAKzH,EAAauE,GAE1CgD,EAAgB,IAAMG,SAASH,GAChC9B,EAAc,GAGdA,EAAc8B,GAEbjC,EAAaE,GAAYD,EAAcC,GAE5CmC,GAfc,mCA+BdC,KACC,CAAC5H,EAAYuE,EAAOe,EAAYE,EAAYE,IA2E7C,yBAAKnD,UAAU,QACb,kBAACsF,EAAD,CAAMpI,OAnKmB,8CAoKzB,kBAACqI,EAAD,CACE1D,KAAMwB,EACNvB,KAAMiB,EACNhB,QAASiB,EACTrF,MAAOsF,EACPf,MAAOzE,EACPuE,MAAOA,EACPC,SAAUA,EACV1B,OA5KuB,4CA6KvBC,KA7KuB,8CA8KvB2B,OA9KuB,+C,MCGhBqD,MANf,WACE,OACE,kBAAC1C,EAAD,OCJJ2C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvE,SAASC,eAAe,W","file":"static/js/main.9b75fa0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-user.02d4c0fa.png\";","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://reqres.in/api/'\r\n})","import api from './api'\r\n\r\nexport default async function getFirstData() {\r\n  /*\r\n    * Retorna todos os usuários da camada de dados e salva em memória\r\n  */\r\n  const getTotal = await api.get('/users')\r\n  const totalUsers = getTotal.data.total\r\n\r\n  const prepareUrl = `/users?per_page=${totalUsers}`\r\n\r\n  const getAll = await api.get(prepareUrl)\r\n\r\n  /*\r\n    * Organizar\r\n  */\r\n  let allUsers = []\r\n  for(let i = totalUsers-1; i >= 0; i--) {\r\n    allUsers = [...allUsers, getAll.data.data[i]]\r\n  }\r\n\r\n  return {\r\n    totalUsers,\r\n    users: allUsers,    \r\n  }\r\n}  ","import * as yup from 'yup';\r\n\r\n/* Validação de dados */\r\nexport default {\r\n  create: yup.object().shape(\r\n  {\r\n    email: yup\r\n      .string()\r\n      .email(\"O E-mail é inválido!\")\r\n      .required(\"Você precisa inserir um E-mail\"),\r\n    first_name: yup\r\n      .string()\r\n      .min(3, \"O Nome precisa ter no mínimo 3 caractéres\")\r\n      .max(20, \"O Nome pode ter no máximo 20 caractéres\")\r\n      .required(\"Você precisa inserir um Nome\"),\r\n    last_name: yup\r\n      .string()\r\n      .min(3, \"O Sobrenome precisa ter no mínimo 3 caractéres\")\r\n      .max(20, \"O Sobrenome precisa ter no máximo 20 caractéres\")\r\n      .required(\"Você precisa inserir um Sobrenome\"),\r\n    avatar: yup\r\n      .string()\r\n      .url(\"Url do Avatar é inválida\")\r\n      .max(300, \"A Url do Avatar só pode ter no máximo 300 caractéres\")\r\n  })\r\n}","import React, { useState } from 'react'\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nimport validation from '../../../../validation/yup'\r\n\r\nimport './styles.css'\r\n\r\nexport default ({ create }) => {\r\n  const [ firstName, setFirstName ] = useState(\"\")\r\n  const [ lastName, setLastName ] = useState(\"\")\r\n  const [ email, setEmail ] = useState(\"\")\r\n  const [ avatar, setAvatar ] = useState(\"\")\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      email,\r\n      first_name: firstName,\r\n      last_name: lastName,\r\n      avatar\r\n    }\r\n\r\n    validation.create\r\n      .validate(data)\r\n      .then(() => {\r\n        create(data)\r\n        \r\n        Swal.fire({\r\n          text: \"Usuário cadastrado!\",\r\n          icon: 'success'\r\n        })\r\n      })\r\n      .catch(({ errors }) => {\r\n        Swal.fire({\r\n          text: errors.join(\"\\n\"),\r\n          icon: 'error'\r\n        })\r\n      })   \r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={e => handleSubmit(e)} className=\"create shadow\">\r\n      <h3>\r\n        <b>Cr</b>iar Usuário\r\n      </h3>\r\n\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Nome:\" \r\n        onChange={({ target }) => setFirstName(target.value)} \r\n      />\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Sobrenome:\"        \r\n        onChange={({ target }) => setLastName(target.value)} \r\n      />\r\n      <input \r\n        type=\"email\" \r\n        placeholder=\"Email:\"\r\n        onChange={({ target }) => setEmail(target.value)} \r\n      />\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Url do Avatar (opcional):\"\r\n        onChange={({ target }) => setAvatar(target.value)} \r\n      />\r\n\r\n      <button type=\"submit\"> \r\n        <i className=\"material-icons\">add</i>\r\n        Cadastrar\r\n      </button>\r\n    </form>\r\n  )\r\n}","import React from 'react'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport validation from '../../../../validation/yup'\r\n\r\nimport './styles.css'\r\n\r\nexport default ({ user, remove, edit, index }) => {\r\n\r\n  const avatar = user.avatar === \"\" ?\r\n    require('../../../../assets/default-user.png') : user.avatar\r\n\r\n  /* Remove Alert */\r\n  function toRemove(index) {\r\n    Swal.fire({\r\n      text: \"Deletar o usuário?\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Sim!',\r\n      cancelButtonText: 'Não!',\r\n      reverseButtons: true\r\n    })\r\n    .then((result) => {\r\n      if (result.value) {\r\n        /* Remove Function */\r\n        remove(index)\r\n\r\n        Swal.fire({\r\n          text: 'O usuário foi removido.',\r\n          icon: 'success'\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  /* Edit Form */\r\n  async function toEdit(index) {    \t\r\n    const { value: data } = await Swal.fire({\r\n      title: 'Editar',\r\n      html:\r\n        `<input id=\"e-first_name\" placeholder=\"Nome:\" value=\"${user.first_name}\" class=\"swal2-input\">` +\r\n        `<input id=\"e-last_name\" placeholder=\"Sobrenome:\" value=\"${user.last_name}\" class=\"swal2-input\">` +\r\n        `<input id=\"e-email\" placeholder=\"E-mail:\" value=\"${user.email}\" class=\"swal2-input\">` +\r\n        `<input id=\"e-avatar\" placeholder=\"Url do Avatar (opcional):\" value=\"${user.avatar}\" class=\"swal2-input\">`,\r\n      focusConfirm: false,\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Salvar!',\r\n      cancelButtonText: 'Cancelar!',\r\n      reverseButtons: true,\r\n      preConfirm: () => {\r\n        return {\r\n          id: user.id,\r\n          email: document.getElementById('e-email').value,\r\n          first_name: document.getElementById('e-first_name').value,\r\n          last_name: document.getElementById('e-last_name').value,\r\n          avatar: document.getElementById('e-avatar').value\r\n        }\r\n      }\r\n    })\r\n\r\n    if (data) {\r\n      validation.create\r\n      .validate(data)\r\n      .then(() => {\r\n        /* Edit Action */\r\n        edit(index, data)\r\n        \r\n        Swal.fire({\r\n          text: \"Usuário editado!\",\r\n          icon: 'success'\r\n        })\r\n      })\r\n      .catch(({ errors }) => {\r\n        Swal.fire({\r\n          text: errors.join(\"\\n\"),\r\n          icon: 'error'\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <article className=\"item shadow\">\r\n      <img src={avatar} alt={user.first_name+\" Avatar\"} />\r\n      \r\n      <div className=\"data\">\r\n        <h3>\r\n          {user.first_name} {user.last_name}\r\n        </h3>\r\n        <a href={\"mailto:\"+user.email}>{user.email}</a>\r\n        <h4>\r\n          ID: {user.id}\r\n        </h4>\r\n      </div>\r\n\r\n      <div className=\"action-buttons\">\r\n        <button onClick={() => toRemove(index)}>\r\n          <i className=\"material-icons\"> delete </i>\r\n        </button>\r\n        <button onClick={() => toEdit(index, user)}>\r\n          <i className=\"material-icons\"> edit </i>\r\n          </button>\r\n      </div>\r\n    </article>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nimport Item from '../Item'\r\n\r\nimport './styles.css'\r\n\r\nexport default ({ list, page, setPage, total, limit, setLimit, count, remove, edit, search }) => {\r\n  \r\n  /* \r\n    Camada de vizualização contendo os items\r\n  */\r\n  const [ usersList, setUsersList ] = useState([])\r\n\r\n  /* Mudar a página */\r\n  function changePage(method) {\r\n    if(method === 'plus') {\r\n      if(page < total) setPage(page+1)\r\n      else setPage(1)\r\n    }\r\n    else if(method === 'down') {\r\n      if(page > 1) setPage(page-1)\r\n      else setPage(total)\r\n    }\r\n  }\r\n\r\n  /* Mudar o limite de views */\r\n  function changeLimit(method) {\r\n    if(method === 'plus') {\r\n      if(limit === count) {\r\n        setLimit(1)\r\n      }\r\n      else {\r\n        setLimit(limit+1)\r\n      }\r\n    }\r\n    else if(method === 'down') {\r\n      if(limit === 1) {\r\n        setLimit(count)\r\n      }\r\n      else {\r\n        setLimit(limit-1)\r\n      }\r\n    }\r\n  }\r\n\r\n  /* \r\n    Monitora a camada dos usuários filtrados\r\n    e transforma cada um em um Item    \r\n  */\r\n  useEffect(() => {\r\n    const newList = list.map((user, i) => \r\n    {\r\n      return <Item user={user} index={i} remove={remove} edit={edit} key={i} />\r\n    })\r\n    \r\n    setUsersList(newList)\r\n  }, [edit, list, remove, search])\r\n\r\n  return (\r\n    <section className=\"list\">      \r\n      <div className=\"filter\">\r\n        <div className=\"change page\">\r\n          <button \r\n            onClick={() => changePage('down')}\r\n            className=\"shadow\">\r\n            <i className=\"material-icons\">navigate_before</i>\r\n          </button>\r\n\r\n          <label>\r\n            <b className=\"hide_in_mobile\">Página</b> <b>{page}</b> de <b>{total}</b>\r\n          </label>\r\n\r\n          <button \r\n            onClick={() => changePage('plus')}\r\n            className=\"shadow\">\r\n            <i className=\"material-icons\">navigate_next</i>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"change search\">\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Pesquisar:\"\r\n            onChange={({ target }) => search(target.value)}/>\r\n        </div>\r\n\r\n        <div className=\"change limit\">\r\n          <button \r\n            onClick={() => changeLimit('down')}\r\n            className=\"shadow\">\r\n            <i className=\"material-icons\">remove</i>\r\n          </button>\r\n          \r\n          <label>\r\n            <b>{limit}</b>\r\n          </label>\r\n\r\n          <button \r\n            onClick={() => changeLimit('plus')}\r\n            className=\"shadow\">\r\n            <i className=\"material-icons\">add</i>\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n      \r\n      {usersList}\r\n    </section>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nimport getFirstData from '../../services/getFirstData'\r\n\r\nimport Form from './components/Form'\r\nimport List from './components/List'\r\n\r\nimport './styles.css'\r\n\r\nexport default function Home() {\r\n  /* \r\n    Filter Options: Opções de filtro\r\n    * Página atual da listagem\r\n    * Limite de itens por listagem\r\n    * Total de páginas\r\n  */\r\n  const [ actualPage, setActualPage ] = useState(1)\r\n  const [ limit, setLimit ] = useState(6)\r\n  const [ totalPages, setTotalPages ] = useState(1)\r\n\r\n  /*\r\n    PrimordialData: Em base os dados responsaveis por guardar\r\n    as informações principais\r\n\r\n      * Data dos usuários: Banco de dados na memória\r\n      * View dos usuários: Dados dos usuários escolhidos para ser mostrados em tela\r\n      * Total de usuários: Muda na primeira sincronização e nas futuras adições/exclusões\r\n      * ID: Como se fosse uma chave primária do banco de dados\r\n  */\r\n  const [ usersData, setUsersData ] = useState([])\r\n  const [ usersView, setUsersView ] = useState([])\r\n  const [ totalUsers, setTotalUsers ] = useState(0)\r\n  const [ lastId, setLastId ] = useState(0)\r\n  \r\n\r\n  /* \r\n    Realiza a primeira consulta a camada de dados\r\n    Retornando as primeiras informações e os usuários\r\n  */  \r\n  useEffect(() => {\r\n    async function initialLoad() {\r\n      try {\r\n        const { totalUsers, users } = await getFirstData() \r\n        setTotalUsers(totalUsers)\r\n        setLastId(totalUsers)\r\n        setUsersData(users)\r\n  \r\n        const temporaryLimit = 6\r\n        setTotalPages((totalUsers / temporaryLimit).toFixed())\r\n        setLimit(temporaryLimit)\r\n      }\r\n      catch {\r\n        alert('Não foi possível carregar os dados iniciais')\r\n      }\r\n    }  \r\n    initialLoad()    \r\n\r\n  }, [])\r\n\r\n  /*\r\n    * Estado de listagem\r\n    * Tem por função o ato de organizar a lista\r\n    * Mantendo a ordem da paginação, do limite e da pesquisa\r\n  */\r\n  useEffect(() => {\r\n    /* \r\n      * Trabalha na paginação\r\n    */\r\n    function changePagination() {\r\n      const newTotalPages = Math.ceil(totalUsers / limit)\r\n\r\n      if(newTotalPages < 1 || !isFinite(newTotalPages)) {\r\n        setTotalPages(1)\r\n      }\r\n      else {\r\n        setTotalPages(newTotalPages)\r\n      }\r\n      if(actualPage > totalPages) setActualPage(totalPages)\r\n    }\r\n    changePagination()\r\n\r\n    /* \r\n      * Recarrega a camada de vizualização\r\n        aplicando a regra de paginação \r\n        e também o limite\r\n    */\r\n    async function changeView() {\r\n\r\n      const initial = (limit * (actualPage-1))\r\n      const end = (limit * actualPage)\r\n\r\n      const newView = usersData.slice(initial, end)\r\n\r\n      await setUsersView(newView)\r\n    }\r\n    changeView()\r\n  }, [totalUsers, limit, actualPage, totalPages, usersData])\r\n\r\n  \r\n  /*\r\n    Ação principal de criação de usuário\r\n  */\r\n  async function handleCreate(data) {\r\n    try {\r\n      /* \r\n        Id primária que não pode diminuir\r\n      */\r\n      const user_id = lastId+1\r\n      setLastId(user_id)\r\n\r\n      const newUser = {id: user_id, ...data}\r\n      await setUsersData([newUser, ...usersData])\r\n\r\n      await setTotalUsers(totalUsers+1)    \r\n    }\r\n    catch(err) {\r\n      alert('Não foi possível cadastrar novo usuário')\r\n    }\r\n  }\r\n\r\n\r\n  /* \r\n    Ação principal de remoção\r\n    * Remove por índice da array dados\r\n  */\r\n  async function handleDelete(index) {\r\n    await setUsersData(usersData.filter((v, i) => i !== index))\r\n    setTotalUsers(totalUsers-1)\r\n  }\r\n\r\n\r\n  /*\r\n    Ação principal de editar\r\n    * Edita por indíce da array de dados\r\n  */\r\n  async function handleEdit(index, data) {\r\n    await setUsersData(usersData.map((atualData, atualIndex) => {\r\n      if(index === atualIndex) {\r\n        return data\r\n      }\r\n      else {\r\n        return atualData\r\n      }\r\n    }))\r\n  }\r\n\r\n  \r\n  /*\r\n    Ação de pesquisa que altera a camada de vizualização\r\n    mantendo a integridade da camada de usuários\r\n  */\r\n  async function handleSearch(val) {\r\n    const toFilter = (user, place) => {\r\n      const regex = new RegExp(val, \"gi\")\r\n      const filter = (user[place]).split(regex)\r\n\r\n      if(filter.length > 1) \r\n        return true\r\n      else \r\n        return false\r\n    }\r\n\r\n    const filteredUsersByName = await usersData.filter(user => toFilter(user, \"first_name\"))\r\n    const filteredUsersByLastName = await usersData.filter(user => toFilter(user, \"last_name\"))\r\n\r\n    await setLimit(totalUsers)\r\n\r\n    await setUsersView([...filteredUsersByName, ...filteredUsersByLastName])\r\n  }\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Form create={handleCreate} />\r\n      <List \r\n        list={usersView} \r\n        page={actualPage} \r\n        setPage={setActualPage} \r\n        total={totalPages} \r\n        count={totalUsers}\r\n        limit={limit}\r\n        setLimit={setLimit}\r\n        remove={handleDelete}\r\n        edit={handleEdit}\r\n        search={handleSearch}/>\r\n    </div>\r\n  )\r\n}","import React from 'react';\n\nimport Home from './pages/Home'\n\nimport './global.css'\n\nfunction App() {\n  return (    \n    <Home />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}